{"version":3,"file":"nl2000.min.js","sources":["../../src/convert.ts","../../src/scheme.ts","../../src/index.ts"],"sourcesContent":["export const fast = (fromRadix: number, toRadix: number, input: number[]) => {\n  const remainders = [], r = BigInt(fromRadix), R = BigInt(toRadix)\n  let z = BigInt(0)\n  for (const n of input) z = r * z + BigInt(n)\n  for (; z; z /= R) remainders.push(Number(z % R))\n  return remainders.reverse()\n}\n\nexport const slow = (fromRadix: number, toRadix: number, input: number[]) => {\n  const remainders = []\n  while (input.some(n => n > 0)) {\n    let remainder = 0\n    for (let i = 0; i < input.length; i++) {\n      const n = fromRadix * remainder + input[i]\n      input[i] = n / toRadix >>> 0 // integer division\n      remainder = n % toRadix\n    }\n    remainders.push(remainder)\n  }\n  return remainders.reverse()\n}\n\nexport const convert =\n  typeof BigInt === 'function'\n    ? fast\n    : slow\n","export const scheme = (range: number) =>\n  String.fromCharCode(...Array(range).keys())\n    .replace(/[^\\p{Nd}\\p{LC}]|[\\u0530-\\u1d6a\\u1fbe]/ug, '')\n","import { convert } from './convert'\nimport { scheme } from './scheme'\n\nexport const NL2000 = scheme(0x2000)\nexport const NL100  = scheme(0x100)\nexport const NL80   = scheme(0x80)\nexport const NL60   = scheme(0x60)\n\nexport const encode = (scheme: string | string[], input: Iterable<number>) =>\n  convert(0x100, scheme.length, [...input]).map(i => scheme[i]).join('')\n\nexport const decode = (scheme: string | string[], input: Iterable<string>) =>\n  convert(scheme.length, 0x100, [...input].map(c => scheme.indexOf(c)))\n"],"names":["convert","BigInt","fromRadix","toRadix","input","remainders","r","R","z","n","push","reverse","some","remainder","i","length","scheme","range","String","fromCharCode","Array","keys","replace","NL2000","NL100","NL80","NL60","map","join","c","indexOf"],"mappings":"yLAAO,MAsBMA,EACO,mBAAXC,OAvBW,CAACC,EAAmBC,EAAiBC,KACvD,MAAMC,EAAa,GAAIC,EAAIL,OAAOC,GAAYK,EAAIN,OAAOE,GACzD,IAAIK,EAAIP,OAAO,GACf,IAAK,MAAMQ,KAAKL,EAAOI,EAAIF,EAAIE,EAAIP,OAAOQ,GAC1C,KAAOD,EAAGA,GAAKD,EAAGF,EAAWK,MAAYF,EAAID,GAC7C,OAAOF,EAAWM,WAGA,CAACT,EAAmBC,EAAiBC,KACvD,MAAMC,EAAa,GACnB,KAAOD,EAAMQ,KAAKH,GAAKA,EAAI,IAAI,CAC7B,IAAII,EAAY,EAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAMW,OAAQD,IAAK,CACrC,MAAML,EAAIP,EAAYW,EAAYT,EAAMU,GACxCV,EAAMU,GAAKL,EAAIN,IAAY,EAC3BU,EAAYJ,EAAIN,EAElBE,EAAWK,KAAKG,GAElB,OAAOR,EAAWM,WCnBPK,EAAUC,GACrBC,OAAOC,gBAAgBC,MAAMH,GAAOI,QACjCC,QAAQ,0CAA2C,ICC3CC,EAASP,EAAO,MAChBQ,EAASR,EAAO,KAChBS,EAAST,EAAO,KAChBU,EAASV,EAAO,oDAEP,EAACA,EAA2BZ,IAChDJ,EAAQ,IAAOgB,EAAOD,OAAQ,IAAIX,IAAQuB,IAAIb,GAAKE,EAAOF,IAAIc,KAAK,cAE/C,EAACZ,EAA2BZ,IAChDJ,EAAQgB,EAAOD,OAAQ,IAAO,IAAIX,GAAOuB,IAAIE,GAAKb,EAAOc,QAAQD"}